{
  "name": "blog-scottnonnenberg-com",
  "private": true,
  "version": "1.0.0",
  "homepage": "https://blogs.scottnonnenberg.com",

  "scripts": {
    "lint": "eslint .",
    "find-missing-eslint-rules": "eslint-find-rules -u .eslintrc.js",

    "develop": "gatsby develop",
    "build": "gatsby build",

    "build-production": "scripts/build.sh",
    "build-staging": "cp config.toml config_production.toml && cp config_staging.toml config.toml && scripts/build.sh --force; mv config_production.toml config.toml",

    "serve": "cd public && python -m SimpleHTTPServer 8000",

    "generate-rss": "babel-node scripts/generate_rss.js",
    "generate-json": "babel-node scripts/generate_json.js",
    "generate-tags": "babel-node scripts/generate_tags.js",
    "update-rankings": "babel-node scripts/update_rankings.js",
    "make-post": "babel-node scripts/make_post.js",
    "clean-post": "babel-node scripts/clean_post.js",

    "test": "npm run cli-test-client-all && npm run test-server-all",
    "test-client": "time mocha-phantomjs",
    "test-client-coverage": "time mocha-phantomjs --hooks ./test/extract_coverage_hook.js",
    "test-client-unit": "npm run test-client -- http://localhost:8001/test/unit.html",
    "test-client-unit-coverage": "npm run test-client-coverage -- http://localhost:8001/test/unit.html",
    "test-client-integration": "npm run test-client -- http://localhost:8001/test/integration.html",
    "test-client-integration-coverage": "npm run test-client-coverage -- http://localhost:8001/test/integration.html",
    "test-client-all": "npm run test-client -- http://localhost:8001/test/all.html",
    "test-client-all-coverage": "npm run test-client-coverage -- http://localhost:8001/test/all.html",
    "build-client-report": "time istanbul report --include coverage/client/coverage.json --dir coverage/client",
    "posttest-client-unit-coverage": "npm run build-client-report",
    "posttest-client-integration-coverage": "npm run build-client-report",
    "posttest-client-all-coverage": "npm run build-client-report",

    "cli-test-client": "NODE_ENV=test babel-node scripts/cli_client.js",
    "cli-test-client-unit": "npm run cli-test-client -- http://localhost:8001/test/unit.html",
    "cli-test-client-integration": "npm run cli-test-client -- http://localhost:8001/test/integration.html",
    "cli-test-client-all": "npm run cli-test-client -- http://localhost:8001/test/all.html",
    "test-server": "NODE_ENV=test time mocha --recursive --compilers js:babel-core/register --require test/setup/server.js",
    "test-server-watch": "npm run test-server -- --watch",
    "test-server-coverage": "NODE_ENV=test time babel-node ./node_modules/.bin/isparta cover _mocha -- --recursive --require test/setup/server.js",

    "test-server-unit": "npm run test-server -- -s 3 -t 150 test/unit/server test/unit/both",
    "test-server-unit-watch": "npm run test-server-watch -- -s 3 -t 150 test/unit/server test/unit/both",
    "test-server-unit-coverage": "npm run test-server-coverage -- test/unit/server test/unit/both",
    "test-server-integration": "npm run test-server -- -s 15 test/integration/server test/integration/both",
    "test-server-integration-watch": "npm run test-server-watch -- -s 15 test/integration/server test/integration/both",
    "test-server-integration-coverage": "npm run test-server-coverage -- test/integration/server test/integration/both",
    "test-server-all": "npm run test-server -- -s 15 test/unit/server test/unit/both test/integration/server test/integration/both",
    "test-server-all-watch": "npm run test-server-watch -- -s 15 test/unit/server test/unit/both test/integration/server test/integration/both",
    "test-server-all-coverage": "npm run test-server-coverage -- test/unit/server test/unit/both test/integration/server test/integration/both",

    "combine-coverage": "istanbul report --dir coverage/combined",
    "full-coverage-run": "npm run test-server-all-coverage && npm run test-client-all-coverage && npm run combine-coverage",

    "open-server-coverage": "open coverage/server/lcov-report/index.html",
    "open-client-coverage": "open coverage/client/lcov-report/index.html",
    "open-combined-coverage": "open coverage/combined/lcov-report/index.html"
  },

  "dependencies": {
    "catch-links": "2.0.1",
    "lodash": "4.12.0",
    "moment": "2.13.0",
    "react": "15.0.2",
    "react-document-title": "2.0.1",
    "react-dom": "15.0.2",
    "react-router": "2.4.0",
    "typography": "0.7.0",
    "underscore.string": "3.3.4"
  },
  "devDependencies": {
    "app-module-path": "1.0.6",
    "babel-cli": "6.8.0",
    "babel-eslint": "6.0.4",
    "babel-plugin-add-module-exports": "0.2.1",
    "babel-preset-es2015": "6.6.0",
    "babel-preset-react": "6.5.0",
    "babel-preset-react-hmre": "1.1.1",
    "babel-preset-stage-0": "6.5.0",
    "chai": "3.5.0",
    "chai-immutable": "1.5.3-property",
    "common-tags": "0.1.1",
    "enzyme": "2.3.0",
    "eslint": "2.10.2",
    "eslint-find-rules": "1.9.2",
    "eslint-plugin-bdd": "2.1.0",
    "eslint-plugin-chai-expect": "1.1.1",
    "eslint-plugin-import": "1.8.0",
    "eslint-plugin-immutable": "1.0.0",
    "eslint-plugin-jsx-a11y": "1.2.0",
    "eslint-plugin-no-loops": "0.2.0",
    "eslint-plugin-react": "5.1.1",
    "eslint-plugin-security": "1.2.0",
    "eslint-plugin-thehelp": "0.1.1",
    "feed": "0.3.0",
    "front-matter": "2.0.7",
    "glob": "7.0.3",
    "grator": "0.2.0",
    "isparta": "4.0.0",
    "istanbul": "0.4.2",
    "markdown-it": "6.0.2",
    "mocha": "2.3.4",
    "mocha-phantomjs": "4.0.2",
    "mock-require": "1.2.1",
    "react-addons-test-utils": "15.0.2",
    "sinon": "1.17.3",
    "superagent": "1.8.3",
    "toml": "2.3.0",
    "webpack": "1.12.14"
  },

  "author": "Scott Nonnenberg <scott@nonnenberg.com>",
  "license": "proprietary",
  "repository": {
    "type": "git",
    "url": "git@infra:sites/blog"
  }
}
